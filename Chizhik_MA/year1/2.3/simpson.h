typedef double (*dFUNC)(double x);
typedef enum {
	OK_INT,
	METHOD_DOES_NOT_CONVERGE
} IntStatus;

/*
 * Нахождение определенного интеграла функции по формуле Симпсона
 *
 * Параметры:
 * f: вещественнозначная функция от одной переменной
 * a: нижний предел интегрирования
 * b: верхний предел интегрирования
 * precision: точность вычислений
 * s: указатель на переменную, в которую записывается информация об успешности выполнения функции
 *
 * Функция simpson_integral находит определенный интеграл вещественнозначной функции 
 * f на отрезке [a, b] (или [b, a]) с точностью precision, если это возможно.
 *
 * Метод:
 * Для нахождения определенного интеграла используется формула Симпсона, 
 * использующая аппроксимацию функции на отрезке многочленом второй степени. Подсчет интегральных сумм
 * продолжается до тех пор, пока разница между двумя последними интегральными суммами не станет меньше
 * заданной точности.
 *
 * Возвращаемое значение:
 * В случае успешного завершения работы функция возвращает найденный определенный интеграл. В случае, 
 * если предел интегральных сумм не будет найден, возвращается последнее найденное значение, а в s передается
 * информация о том, что используемый метод не сошелся.
 *
 */

double simpson_integral(dFUNC f, double a, double b, double precision, IntStatus *s);
