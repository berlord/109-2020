/**   Функция для заданного каталога и его подкаталогов вывести список всех
 ** файлов в виде дерева.
 **
 **   Параметры:
 **   directory: название директории, файлы которой нужно вывести
 **   fout: указатель на выходной файл, куда будет выведено дерево файлов
 **
 **   Функция внутри себя вызывает поочередно функции чтения и запипси названий
 ** полных файлов ftw, сортировки массива названий qsort, подсчета максимальной
 ** длинны названия файла в подиректориях count_tree, вывода дерева print_tree.
 **
 **   Пример работы функции:
 **   directory:
 **   a.txt
 **   b.txt
 **   c
 **
 **   c: d.txt
 **
 **   В выходной файл будет выведено:
 **   directory ——— a.txt
 **              |- b.txt
 **              |- c ——— d.txt
 **
 **   Метод:
 **   Для вывода списка файлов в виде дерева заполняется массив, содержащий все
 ** файлы из каталога и его подкатологов. Затем массив сортируется в
 ** лексикографическом порядке. После вычисляется максимальная длинна названия
 ** на каждом уровне подкатологов, и только потом выводится в виде дерева.
 */
void make_tree(char *directory, FILE *fout);

/**
 **   fn - колбэк-функция для ftw
 **
 **   Параметры:
 **   file: Полное имя файла
 **   sb: указатель на структуру, содержащую основную информацию о файле
 **   flag: целочисленное значение, обозначающее тип файла
 **
 **   fn динамически выделяет память для массива FL и записывает в новуя ячейку
 ** имя файла
 */
static int fn(const char *file, const struct stat *sb, int flag);

/**
 **   Колбэк-функция для qsort:
 ** возвращает отрицательное значение, если arg1 < arg2,
 ** 0, если arg1 и arg2 совпадают, и
 ** положительное значение, если arg1 > arg2
 ** (используется лексикографический порядок)
 */
int comp(const void *arg1, const void *arg2);

/**
 **   Функция рекурсивно подсчетывает максимальных длин на каждом уровне
 ** подкатологов.
 **
 **   Параметры:
 **   directory: Имя текущей дериктории или поддериктории
 **   depth: глубина текущей дериктории или поддериктории
 */
void count_tree(char *directory, int depth);

/**
 **   Функция рекурсивно выводит список файлов каталога и его подкатологов.
 **
 **   Параметры:
 **   directory: Имя текущей дериктории или поддериктории
 **   cs: количество символов необходимых для отступа на текущем уровне
 **   depth: глубина текущей дериктории или поддериктории
 */
void print_tree(char *directory, FILE *fout, int cs, int depth);
